{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0BE,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCfQ,SAASC,cAAc,SAASC,iBAAiB,UAAWC,IACxDA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAC1CC,EAAaC,SAASN,EAAMO,OAC5BC,EAAYF,SAASL,EAAKM,OAC1BE,EAAcH,SAASJ,EAAOK,OAKpC,IAAK,IAAIG,EAAQ,EAAGA,EAAQD,EAAaC,IAAS,CAGhDzB,EADqByB,EAAQ,EADfA,EAAQF,EAAYH,GAEGM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACrDyB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEzE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,G,CAIzEW,EAAEK,cAAcc,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.querySelector('.form').addEventListener('submit', (e) => {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n    const delayValue = parseInt(delay.value);\n    const stepValue = parseInt(step.value);\n    const amountValue = parseInt(amount.value);\n  \n    const promises = [];\n    let indexToProduct = 0;\n  \n    for (let index = 0; index < amountValue; index++) {\n      const delay = index * stepValue + delayValue;\n      let indexToProduct = index + 1;\n      createPromise(indexToProduct, delay).then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n  \n    e.currentTarget.reset();\n  });\n  \n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay2","step","amount","currentTarget","elements","delayValue","parseInt","value","stepValue","amountValue","index","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f2a77b93.js.map"}